services:
  app:
    build: .
    ports:
      - "${PORT}:${PORT}"
    environment:
      - PORT=${PORT}
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - OPENROUTER_BASE_URL=${OPENROUTER_BASE_URL}
      - OPENROUTER_MODEL=${OPENROUTER_MODEL}
      - OPENROUTER_FALLBACKS=${OPENROUTER_FALLBACKS}
      - CONFIDENCE_THRESHOLD=${CONFIDENCE_THRESHOLD}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_USERNAME=${REDIS_USERNAME}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_DB=${REDIS_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=${POSTGRES_PORT}
    networks:
      - otosei-ai
    volumes:
      - ./logs:/logs:Z
    restart: always
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - redis
      - postgres

  redis:
    image: redis:6.2-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD} --save 20 1 --loglevel warning --port ${REDIS_PORT}
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    networks:
      - otosei-ai
    volumes:
      - redis_data:/data
    restart: always

  postgres:
    image: postgres:17
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=${POSTGRES_PORT}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    networks:
      - otosei-ai
    volumes:
      - pg_data:/var/lib/postgresql/data
    restart: always

networks:
  otosei-ai:
volumes:
  redis_data:
  pg_data:
